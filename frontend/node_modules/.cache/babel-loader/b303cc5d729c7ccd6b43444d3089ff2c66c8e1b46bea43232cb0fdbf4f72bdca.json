{"ast":null,"code":"import GolpeInput from './GolpeInput.vue';\nimport api from '../services/api';\nexport default {\n  components: {\n    GolpeInput\n  },\n  data() {\n    return {\n      personagem: {\n        nome: '',\n        raca: '',\n        classe: '',\n        descricao: '',\n        golpes: [{\n          nome: '',\n          descricao: ''\n        }, {\n          nome: '',\n          descricao: ''\n        }, {\n          nome: '',\n          descricao: ''\n        }]\n      },\n      racas: [\"Humano\", \"Elfo\", \"Anão\", \"Orc\", \"Tiefling\", \"Halfling\", \"Draconato\", \"Gnomo\"],\n      classes: [\"Guerreiro\", \"Mago\", \"Ladino\", \"Clérigo\", \"Bárbaro\", \"Paladino\", \"Feiticeiro\", \"Druida\"]\n    };\n  },\n  methods: {\n    async criarPersonagem() {\n      try {\n        const resposta = await api.criarPersonagem(this.personagem);\n        this.$emit('personagemCriado', resposta);\n      } catch (erro) {\n        console.error(\"Erro ao criar personagem:\", erro);\n      }\n    }\n  }\n};","map":{"version":3,"names":["GolpeInput","api","components","data","personagem","nome","raca","classe","descricao","golpes","racas","classes","methods","criarPersonagem","resposta","$emit","erro","console","error"],"sources":["C:\\Users\\onofr\\Desktop\\Projeto RPG de Mesa\\frontend\\src\\components\\PersonagemForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <h1 class=\"titulo\">Criação de Personagem</h1>\r\n  \r\n      <form @submit.prevent=\"criarPersonagem\">\r\n        <div class=\"campo\">\r\n          <label>Nome do Personagem</label>\r\n          <input v-model=\"personagem.nome\" type=\"text\" class=\"input\" required />\r\n        </div>\r\n  \r\n        <div class=\"campo\">\r\n          <label>Raça</label>\r\n          <select v-model=\"personagem.raca\" class=\"input\" required>\r\n            <option v-for=\"raca in racas\" :key=\"raca\" :value=\"raca\">{{ raca }}</option>\r\n          </select>\r\n        </div>\r\n  \r\n        <div class=\"campo\">\r\n          <label>Classe</label>\r\n          <select v-model=\"personagem.classe\" class=\"input\" required>\r\n            <option v-for=\"classe in classes\" :key=\"classe\" :value=\"classe\">{{ classe }}</option>\r\n          </select>\r\n        </div>\r\n  \r\n        <div class=\"campo\">\r\n          <label>Descrição do Personagem</label>\r\n          <textarea v-model=\"personagem.descricao\" class=\"input\" required></textarea>\r\n        </div>\r\n  \r\n        <h2 class=\"subtitulo\">Golpes</h2>\r\n  \r\n        <GolpeInput v-for=\"(golpe, index) in personagem.golpes\" \r\n            :key=\"index\" \r\n            v-model=\"personagem.golpe[index]\" />\r\n  \r\n        <button type=\"submit\" class=\"btn\">Criar Personagem</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import GolpeInput from './GolpeInput.vue';\r\n  import api from '../services/api';\r\n  \r\n  export default {\r\n    components: { GolpeInput },\r\n    data() {\r\n  return {\r\n    personagem: {\r\n      nome: '',\r\n      raca: '',\r\n      classe: '',\r\n      descricao: '',\r\n      golpes: [\r\n        { nome: '', descricao: '' },\r\n        { nome: '', descricao: '' },\r\n        { nome: '', descricao: '' }\r\n      ]\r\n    },\r\n        racas: [\"Humano\", \"Elfo\", \"Anão\", \"Orc\", \"Tiefling\", \"Halfling\", \"Draconato\", \"Gnomo\"],\r\n        classes: [\"Guerreiro\", \"Mago\", \"Ladino\", \"Clérigo\", \"Bárbaro\", \"Paladino\", \"Feiticeiro\", \"Druida\"]\r\n      };\r\n    },\r\n    methods: {\r\n      async criarPersonagem() {\r\n        try {\r\n          const resposta = await api.criarPersonagem(this.personagem);\r\n          this.$emit('personagemCriado', resposta);\r\n        } catch (erro) {\r\n          console.error(\"Erro ao criar personagem:\", erro);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .container {\r\n    max-width: 480px;\r\n    margin: auto;\r\n    padding: 20px;\r\n    background: #1e1e2e;\r\n    color: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  .titulo {\r\n    text-align: center;\r\n    font-size: 1.5em;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .subtitulo {\r\n    margin-top: 20px;\r\n    font-size: 1.2em;\r\n  }\r\n  \r\n  .campo {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #444;\r\n    border-radius: 4px;\r\n    background: #2e2e3e;\r\n    color: white;\r\n  }\r\n  \r\n  .btn {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background: #ff6b6b;\r\n    color: white;\r\n    font-weight: bold;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .btn:hover {\r\n    background: #ff4b4b;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAyCE,OAAOA,UAAS,MAAO,kBAAkB;AACzC,OAAOC,GAAE,MAAO,iBAAiB;AAEjC,eAAe;EACbC,UAAU,EAAE;IAAEF;EAAW,CAAC;EAC1BG,IAAIA,CAAA,EAAG;IACT,OAAO;MACLC,UAAU,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,CACN;UAAEJ,IAAI,EAAE,EAAE;UAAEG,SAAS,EAAE;QAAG,CAAC,EAC3B;UAAEH,IAAI,EAAE,EAAE;UAAEG,SAAS,EAAE;QAAG,CAAC,EAC3B;UAAEH,IAAI,EAAE,EAAE;UAAEG,SAAS,EAAE;QAAG;MAE9B,CAAC;MACGE,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,CAAC;MACtFC,OAAO,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ;IACnG,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,GAAG,CAACY,eAAe,CAAC,IAAI,CAACT,UAAU,CAAC;QAC3D,IAAI,CAACW,KAAK,CAAC,kBAAkB,EAAED,QAAQ,CAAC;MAC1C,EAAE,OAAOE,IAAI,EAAE;QACbC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,IAAI,CAAC;MAClD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}